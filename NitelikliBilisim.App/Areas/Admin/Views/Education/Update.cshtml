@model NitelikliBilisim.App.Areas.Admin.Models.Education.UpdateGetVm
@using NitelikliBilisim.Core.Enums
@{
    ViewData["Title"] = "Eğitim Güncelle";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/css/select2.min.css" rel="stylesheet" />
    <link href="~/css/sup/alert-sup.css" rel="stylesheet" />
    <link href="~/css/lib/file-uploader.css" rel="stylesheet" />
}
@section alerts{
    <partial name="partials/_Alert" />
}
<div class="box_general padding_bottom">
    <div class="header_box version_2">
        @{
            var icon = Model.Education.IsActive ? "<i class=\"fa fa-unlock text-success\"></i>" : "<i class=\"fa fa-lock text-danger\" ></i>";
        }
        <h2>@Html.Raw(icon) @Model.Education.Name Eğitimini Güncelle</h2>
    </div>
    <form id="form-update-education">
        @Html.AntiForgeryToken()
        <input type="hidden" value="@Model.Education.Id" id="_education-id" />
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Eğitim İsmi</label>
                    <input type="text" class="form-control" placeholder="Eğitim ismini giriniz..." id="input-name" value="@Model.Education.Name">
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    @{
                        var isChecked = Model.Education.IsActive ? "checked" : "";
                    }
                    <label>Eğitimi Kilitle/Aç</label>
                    <div class="form-check">
                        <label class="form-check-label text-danger">
                            <input type="radio" class="form-check-input" name="optradio" id="input-is-active" checked>Kilitle
                        </label>
                    </div>
                    <div class="form-check">
                        <label class="form-check-label text-success">
                            <input type="radio" class="form-check-input" name="optradio" @isChecked>Aç
                        </label>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Kategorilerini Seçiniz</label>
                    <select id="select-categories" multiple="multiple" class="form-control">
                        @foreach (var item in Model.Categories)
                        {
                            if (Model.RelatedCategories.Count(x => x.Id == item.Id) > 0)
                            {
                                <option value="@item.Id" selected>@item.Name</option>
                            }
                            else
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label>Eğitim Açıklaması</label>
                    <textarea id="input-description" rows="5" class="form-control" style="height:100px;resize:none;" placeholder="Eğitimin kullanıcı tarafından görülebilecek özet açıklaması...">@Model.Education.Description</textarea>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Eğitim Süresi (Gün)</label>
                    <input type="text" class="form-control" placeholder="Eğitimin kaç gün süreceğini giriniz..." id="input-days" value="@Model.Education.Days">
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Günde Kaç Saat</label>
                    <input type="text" class="form-control" placeholder="Derslerin günlük kaç saat işleneceğinizi giriniz..." id="input-hours-per-day" value="@Model.Education.HoursPerDay">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Fiyatı</label>
                    <input type="text" class="form-control" placeholder="Fiyatı..." id="input-price" value="@Model.Education.NewPrice">
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Seviyeyi Seçiniz</label>
                    <select id="select-levels" class="form-control">
                        @foreach (var item in Model.Levels)
                        {
                            if (Model.Education.Level == (EducationLevel)item.Key)
                            {
                                <option value="@item.Key" selected>@item.Value</option>
                            }
                            else
                            {
                                <option value="@item.Key">@item.Value</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>
    </form>
</div>

<p><button id="btn-save" class="btn_1 medium">Kaydet</button></p>
@section postScripts{
    <script src="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/js/select2.min.js"></script>
    <script src="~/js/sup/alert-sup.js"></script>
    <script src="~/js/lib/security-support.js"></script>
    <script src="~/js/lib/file-uploader.js"></script>
    <script>
        /* elements */
        var selectCategories = $("#select-categories");
        var selectLevels = document.getElementById("select-levels");
        var btnSave = $("#btn-save");

        /* assignments */
        $(document).ready(document_onLoad);
        btnSave.on("click", btnSave_onClick);

        /* events*/
        function document_onLoad() {
            selectCategories.select2();
            $(selectLevels).select2();
        }
        function btnSave_onClick() {
            btnSave.off("click");
            var resultAlert = new AlertSupport.ResultAlert();
            var categoryIds = selectCategories.val();
            if (categoryIds.length == 0) {
                resultAlert.display({
                    success: false,
                    errors: ["Eğitim en az bir kategoriye ait olmalıdır"],
                    scrollToTop: true
                });
                btnSave.on("click", btnSave_onClick);
                return;
            }

            var isActive = document.getElementById("input-is-active").checked;

            var data = {
                EducationId: $("#_education-id").val(),
                Name: $("#input-name").val(),
                Description: $("#input-description").val(),
                Price: $("#input-price").val(),
                Days: $("#input-days").val(),
                HoursPerDay: $("#input-hours-per-day").val(),
                EducationLevel: selectLevels.options[selectLevels.selectedIndex].value,
                CategoryIds: categoryIds,
                IsActive: !isActive
            };
            var tokenVerifier = new SecuritySupport.TokenVerifier();
            data = tokenVerifier.addToken("form-update-education", data);
            $.ajax({
                url: "/admin/egitim-guncelle",
                method: "post",
                data: data,
                success: (res) => {
                    if (res.isSuccess) {
                        $("#form-update-education")[0].reset();
                        resultAlert.display({
                            success: true,
                            message: "Güncelleme işlemi başarılı! Listeye gitmek için {link}",
                            redirectElement: {
                                content: "tıklayınız",
                                link: "/admin/egitimler"
                            }
                        });
                    } else {
                        resultAlert.display({
                            success: false,
                            errors: res.errors,
                            message: "İşlem başarısız"
                        });
                    }

                    btnSave.on("click", btnSave_onClick);
                },
                error: (error) => {
                    alert(error.message);
                }
            });
        }

        /* functions */
    </script>
}