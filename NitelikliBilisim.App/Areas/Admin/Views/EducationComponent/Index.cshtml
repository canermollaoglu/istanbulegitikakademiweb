
@{
    ViewData["Title"] = "Komponent Eğitim Listesi";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section alerts{
    <partial name="partials/_Alert" />
}
<div class="card mb-3">
    <div class="card-header">
        <i class="fa fa-table"></i> Komponent Eğitim Listesi
    </div>
    <div class="card-body">
        <div id="grid"></div>
    </div>
</div>

@section postScripts{
    <script>

        /* fields */
        var confirmModalBuilder = new AlertSupport.ConfirmModalBuilder();

        /* assignments */
        $(document).ready(document_onLoad);

        /* events */
        function document_onLoad() {
            var deleteButtons = $(".btn-confirmation-modal-trigger");
            for (var i = 0; i < deleteButtons.length; i++) {
                var btn = deleteButtons[i];
                btn.onclick = btnConfirmationModalTrigger_onClick;
            }
            confirmModalBuilder.buildModal({
                title: "Emin misiniz?",
                bodyText: "Seçmiş olduğunuz kayıt kalıcı olarak silinecektir.",
                cancelText: "Hayır, iptal et",
                confirmText: "Evet, eminim",
                onConfirmClick: confirm_onClick
            });
            createGrid();
        }
        function btnConfirmationModalTrigger_onClick() {
            /* assigned @@ document_onLoad */
            var url = this.getAttribute("data-url");
            confirmModalBuilder.setUrl(url);
            confirmModalBuilder.display();
        }
        function confirm_onClick() {
            var url = this.getAttribute("data-url");
            $.ajax({
                url: url,
                method: "get",
                success: (res) => {
                    if (res.isSuccess) {
                        location.href = location.href;
                    } else {
                        var resultAlert = new AlertSupport.ResultAlert();
                        resultAlert.display({
                            success: false,
                            errors: res.errors,
                            message: "Hataları düzeltiniz"
                        });
                    }
                }
            });
        }

        /*DataGrid*/
        function createGrid() {
            $("#grid").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "id",
                    loadUrl: "../../api/educationcomponent/get"
                }),
                remoteOperations: {
                    paging: true,
                    filtering: true,
                    sorting: true,
                    grouping: true,
                    summary: true,
                    groupPaging: true
                },
                showBorders: true,
                showColumnLines: true,
                rowAlternationEnabled: true,
                showRowLines: true,
                wordWrapEnabled: true,
                filterRow: {
                    visible: true,
                    applyFilter: "auto"
                },
                searchPanel: {
                    visible: true,
                    width: 240
                },
                paging: {
                    pageSize: 10
                },
                onContentReady: function () {
                    var deleteButtons = $(".btn-confirmation-modal-trigger");
                    for (var i = 0; i < deleteButtons.length; i++) {
                        var btn = deleteButtons[i];
                        btn.onclick = btnConfirmationModalTrigger_onClick;
                    }
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [5, 10, 20],
                    showInfo: true
                },
                onExporting: function (e) {
                    var workbook = new ExcelJS.Workbook();
                    var worksheet = workbook.addWorksheet('Kompnent Eğitimleri Listesi');
                    DevExpress.excelExporter.exportDataGrid({
                        worksheet: worksheet,
                        component: e.component,
                        customizeCell: function (options) {
                            var excelCell = options;
                            excelCell.font = { name: 'Arial', size: 12 };
                            excelCell.alignment = { horizontal: 'left' };
                        }
                    }).then(function () {
                        workbook.xlsx.writeBuffer().then(function (buffer) {
                            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Komponent Eğitimleri Listesi' + parseInt(Math.random() * 1000000000) + '.xlsx');
                        });
                    });
                    e.cancel = true;
                },
                export: {
                    enabled: true
                },
                headerFilter: {
                    visible: true
                },
                grouping: {
                    autoExpandAll: true
                },
                groupPanel: {
                    visible: true
                },
                columns: [
                    {
                        caption: "Ana Kategori",
                        dataField: "baseCategory"
                    },
                    {
                        caption: "Kategori",
                        dataField: "category"
                    },
                    {
                        caption: "Eğitim",
                        dataField: "educationName"
                    },
                    {
                        caption: "Sıra",
                        dataField: "order"
                    },
                    {
                        caption: "Komponent Tipi",
                        dataField: "componentType",
                        lookup: {
                            dataSource: {
                                store: DevExpress.data.AspNet.createStore({
                                    key: "key",
                                    loadUrl: "../../api/educationcomponent/component-types"
                                })
                            },
                            displayExpr: "value",
                            valueExpr: "key",
                            width: 120
                        }
                    },
                    {
                        caption: "Öneri Tipi",
                        dataField: "suggestionType",
                        lookup: {
                            dataSource: {
                                store: DevExpress.data.AspNet.createStore({
                                    key: "key",
                                    loadUrl: "../../api/educationcomponent/suggestion-types"
                                })
                            },
                            displayExpr: "value",
                            valueExpr: "key",
                            width: 120
                        }
                    },
                    {
                        caption: "İşlem",
                        allowSearch: false,
                        cellTemplate: function (container, options) {
                            var current = options.data;

                            $(`<button title="Sil" class="btn-confirmation-modal-trigger btn btn-danger btn-sm" data-url="/admin/delete-education-component-item?componentItemId=${current.id}" style="cursor:pointer;"><i class="fa fa-trash"></i></button>`)
                                .appendTo(container);
                        },
                        alignment: "center",
                        width: 100
                    }
                ]
            });

        }
    </script>

}