@model NitelikliBilisim.Core.ViewModels.areas.admin.education_groups.GroupDetailVm
@{
    ViewData["Title"] = "Grup Aç";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/css/sup/alert-sup.css" rel="stylesheet" />
    <link href="~/vendor\devextreme\dist\css\dx.common.css" rel="stylesheet" />
    <link href="~/vendor\devextreme\dist\css\dx.light.css" rel="stylesheet" />
    <style>
        .form-check-label {
            cursor: pointer;
        }
    </style>
}
@section alerts{
    <partial name="partials/_Alert" />
}

<div class="row">
    <!--Genel Grup Bilgileri-->
    <div class="col-md-12">
        <div class="card mb-3">
            <div class="card-header">
                <i class="fa fa-list"></i> <strong></strong> Genel Grup Bilgileri
            </div>
            <input type="hidden" value="@Model.GroupId" id="groupId" />
            <div class="card-body">
                <table class="table table-bordered">
                    <tbody>
                        <tr>
                            <td>
                                <b>Grup Adı</b>
                            </td>
                            <td>
                                @Model.GroupName
                            </td>

                            <td>
                                <b>Eğitim Yeri</b>
                            </td>
                            <td>
                                @Model.Host.HostName
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <b>Eğitim</b>
                            </td>
                            <td>
                                @Model.Education.Name
                            </td>
                            <td>
                                <b>Başlangıç Tarihi</b>
                            </td>
                            <td>
                                @Model.StartDate.GetValueOrDefault().ToShortDateString()
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <b>Eğitmen</b>
                            </td>
                            <td>
                                @Model.EducatorName
                            </td>
                            <td>
                                <b>Başlangıç Tarihi</b>
                            </td>
                            <td>
                                @Model.StartDate.GetValueOrDefault().ToShortDateString()
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!--Kayıtlı Öğrenciler-->
    <div class="col-md-12">
        <div class="card mb-3">
            <div class="card-header">
                <i class="fa fa-users"></i> <strong></strong> Öğrenci Listesi
            </div>
            <div class="card-body">
                <div id="grid-students"></div>
            </div>
        </div>
    </div>

</div>
<div class="row">
    <!--Grup Giderleri-->
    <div class="col-md-6">
        <div class="card mb-3">
            <div class="card-header">
                <i class="fa fa-list"></i> <strong></strong> Grup Giderleri
                <a href="#" data-toggle="modal" data-target="#addGroupExpenseModal" class="btn btn-outline-primary btn-sm pull-right"><i class="fa fa-plus"></i> </a>
            </div>
            <div class="card-body" id="groupExpensesDiv">

            </div>

        </div>
    </div>
    <!--Eğitim Günleri-->
    <div class="col-md-6">
        <div class="card mb-3">
            <div class="card-header">
                <i class="fa fa-list"></i> <strong>Eğitim</strong> Günleri
            </div>
            <div class="card-body">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <td><strong>Tarih</strong></td>
                            <td><strong>Eğitmen Ücreti</strong></td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var lessonDay in Model.LessonDays)
                        {
                            <tr>
                                <td>@lessonDay.DateOfLesson.ToShortDateString()</td>
                                <td>@lessonDay.EducatorSalary</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>

<div class="modal fade" id="addGroupExpenseModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Eğitim Öneri Kriteri Düzenle</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="form-add-groupexpense">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="educationSuggestionCriterionId" />
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="col-form-label">Gider Tipi : </label>
                                <select class="form-control" id="selectExpenseType">
                                    @foreach (var item in Model.GroupExpenseTypes)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-form-label">Adet</label>
                                <input type="number" class="form-control" id="inputCount" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-form-label">Birim Fiyat : </label>
                                <input type="number" class="form-control" id="inputPrice" />
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="col-form-label">Açıklama : </label>
                                <textarea type="text" class="form-control" id="inputDescription"></textarea>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="btn-save">Kaydet</button>
            </div>
        </div>
    </div>
</div>

@section postScripts{
    <script src="~/assets/js/area-admin/jquery.dataTables.js"></script>
    <script src="~/assets/js/area-admin/dataTables.bootstrap4.js"></script>
    <script src="~/js/sup/alert-sup.js"></script>
    <script src="~/js/lib/security-support.js"></script>
    <script src="~/vendor\devextreme\dist\js\dx.all.js"></script>
    <script type="text/javascript">
        /* elements */
        var selectExpenseTypes = $("#selectExpenseType");
        var inputPrice = $("#inputPrice");
        var inputCount = $("#inputCount");
        var inputDescription = $("#inputDescription");
        var groupExpensesDiv = $("#groupExpensesDiv");
        var groupId = $("#groupId");
        var btnSave = $("#btn-save");

        /* assignments */
        $(document).ready(document_onLoad);
        btnSave.on("click", btnSave_onClick);

        /* events */
        function document_onLoad() {
            fillGroupExpenses();
            createStudentGrid();
        }

        function btnSave_onClick() {
            btnSave.off("click");

            var tokenVerifier = new SecuritySupport.TokenVerifier();
            var data = tokenVerifier.addToken("form-add-groupexpense", {
                GroupId: groupId.val(),
                Description: inputDescription.val(),
                Price: inputPrice.val(),
                Count: inputCount.val(),
                ExpenseTypeId: selectExpenseTypes.val()
            });
            var resultAlert = new AlertSupport.ResultAlert();
            $.ajax({
                url: "/admin/add-group-expense",
                method: "post",
                data: data,
                success: (res) => {

                    if (res.isSuccess) {
                        resultAlert.display({
                            success: true,
                            message: "Kayıt işlemi başarılı!",

                        });
                    } else {
                        resultAlert.display({
                            success: false,
                            errors: res.errors,
                            message: "İşlem başarısız"
                        });
                    }
                    fillGroupExpenses();
                    $('#form-add-groupexpense')[0].reset();
                    $("#addGroupExpenseModal").modal('hide');
                },
                complete: () => {
                    btnSave.on("click", btnSave_onClick);

                }
            });

        }

        function fillGroupExpenses() {
            var gId = groupId.val();
            $.ajax({
                url: `/admin/get-expense-list-by-group-id?groupId=${gId}`,
                method: "get",
                success: (res) => {
                    if (res.isSuccess) {
                        groupExpensesDiv.empty();
                        createExpensesList(res.data);
                    } else {
                        resultAlert.display({
                            success: false,
                            errors: res.errors
                        });
                    }
                }
            });
        }
        function createExpensesList(data) {
            var content = '<table class="table table-bordered"><thead><tr><td>Gider Tipi</td><td>Açıklama</td><td>Adet</td><td>Birim Fiyat</td></tr></thead><tbody>';
            if (data.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    var expense = data[i];
                    content +=
                        `<tr>` +
                        `<td>${expense.expenseType.name}</td>` +
                        `<td>${expense.description}</td>` +
                        `<td>${expense.count}</td>` +
                        `<td>${expense.price}</td>` +
                        ` </tr>`;

                }
            }
            content += '</tbody></table>';
            groupExpensesDiv.append(content);
        }


        /*DataGrid*/
        function createStudentGrid() {
            var gId = groupId.val();
            $("#grid-students").dxDataGrid({
                dataSource: `/admin/educationgroup/AssignedUserByGroupId?groupId=${gId}`,
                showBorders: true,
                showColumnLines: true,
                showRowLines: true,
                filterRow: {
                    visible: true,
                    applyFilter: "auto"
                },
                searchPanel: {
                    visible: false
                },
                paging: {
                    pageSize: 10
                },
                onContentReady: function () {
                    var deleteButtons = $(".btn-confirmation-modal-trigger");
                    for (var i = 0; i < deleteButtons.length; i++) {
                        var btn = deleteButtons[i];
                        btn.onclick = btnConfirmationModalTrigger_onClick;
                    }
                },
                pager: {
                    showPageSizeSelector: true,
                    allowedPageSizes: [5, 10, 20],
                    showInfo: true
                },
                columns: [{
                    caption: "Ad Soyad",
                    dataField: "customerFullName",
                    width: 150
                },
                {
                    caption: "Email",
                    dataField: "email",
                    width: 150
                },
                {
                    caption: "Telefon",
                    dataField: "phoneNumber",

                },
                {
                    caption: "İşlem",
                    allowSearch: false,
                    cellTemplate: function (container, options) {
                        var current = options.data;
                        $(`<a title="Gruptan Çıkar" class="btn btn-outline-danger btn-sm" href="#"><i class="fa fa-remove"></i></a>`)
                            .appendTo(container);
                    },
                    alignment: "center",
                    width: "auto"
                }
                ]
            });

        }
    </script>
}