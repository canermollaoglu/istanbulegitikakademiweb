@model NitelikliBilisim.Core.ViewModels.SearchResultsGetVm
@{
    ViewData["Title"] = string.IsNullOrEmpty(Model.CategoryName) ? "Tüm Eğitimler" : Model.CategoryName + " Eğitimleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href="~/assets/css/grey.css" rel="stylesheet">
    <link href="~/assets/css/search/search-results.css" rel="stylesheet" />
    <style>
        a [role="button"] {
            cursor: pointer;
        }
        .courses {
            height: 78px !important;
        }
    </style>
}
<main>
    <section id="hero_in" class="courses">
        <div class="wrapper">
            <div class="container">
                <h1 class="fadeInUp"><span></span>@(string.IsNullOrEmpty(Model.CategoryName) ? "TÜM EĞİTİMLER" : Model.CategoryName.ToUpper() + " EĞİTİMLERİ")</h1>
            </div>
        </div>
    </section>

    <input type="hidden" value="@Model.CategoryName" id="_category-name" />
    <input type="hidden" value="@Model.SearchText" id="_search-text" />
    <input type="hidden" value="0" id="_page" />
    <input type="hidden" value="@Model.ShowAs" id="_show-as" />

    <div class="filters_listing sticky_horizontal">
        <div class="container">
            <ul class="clearfix">
                <li>
                    <div class="switch-field">
                        <input type="radio" id="criteria-all" name="listing_filter" value="0" checked>
                        <label for="criteria-all">Tümü</label>
                        @for (var i = 0; i < Model.OrderCriterias.Count; i++)
                        {
                            var item = Model.OrderCriterias.ElementAt(i);
                            <input type="radio" id="criteria-@i" name="listing_filter" value="@item.Key">
                            <label for="criteria-@i">@item.Value</label>
                        }
                    </div>
                </li>
                <li>
                    <div class="layout_view">
                        @if (Model.ShowAs == "grid")
                        {
                            <a role="button" class="active" id="btn-show-as-grid"><i class="icon-th"></i></a>
                            <a role="button" id="btn-show-as-list"><i class="icon-th-list"></i></a>
                        }
                        else
                        {
                            <a role="button" id="btn-show-as-grid"><i class="icon-th"></i></a>
                            <a role="button" class="active" id="btn-show-as-list"><i class="icon-th-list"></i></a>
                        }
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <div class="container margin_60_35">
        <div class="row" style="transform: none;">
            <aside class="col-lg-3" id="sidebar" style="overflow: visible; box-sizing: border-box; min-height: 1px;">
                <div class="theiaStickySidebar" style="padding-top: 0px; padding-bottom: 1px; position: static; transform: none; top: 0px; left: 83px;">
                    <div id="filters_col">
                        <div class="input-group" style="margin-bottom: 20px">
                            <input type="text" id="input-search" class="form-control" placeholder="Ara..." value="@Model.SearchText" aria-describedby="btn-search">
                            <div class="input-group-append">
                                <button type="submit" id="btn-search" class="btn btn-danger btn-sm"><i class="icon-search"></i></button>
                            </div>
                        </div>
                        <a data-toggle="collapse" href="#collapseFilters" aria-expanded="false" aria-controls="collapseFilters" id="filters_col_bt">Filtreleme </a>
                        <div class="collapse show" id="collapseFilters">
                            <div class="filter_type">
                                <h6>Kategori</h6>
                                <ul id="category-list"></ul>
                            </div>
                            <div class="filter_type">
                                <h6>Seviye</h6>
                                <ul id="level-list"></ul>
                            </div>
                            @*<div class="filter_type">
                            <h6>Değerlendirme</h6>
                            <ul id="rating-list">
                                <li>
                                    <label>
                                        <input type="checkbox" name="rat-filter" value="5" class="icheck" style="position: absolute; opacity: 0;">
                                        <span class="rating"><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star voted"></i> <small>(0)</small></span>
                                    </label>
                                </li>
                                <li>
                                    <label>
                                        <input type="checkbox" name="rat-filter" value="4" class="icheck" style="position: absolute; opacity: 0;">
                                        <span class="rating"><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star"></i> <small>(0)</small></span>
                                    </label>
                                </li>
                                <li>
                                    <label>
                                        <input type="checkbox" name="rat-filter" value="3" class="icheck" style="position: absolute; opacity: 0;">
                                        <span class="rating"><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star"></i><i class="icon_star"></i> <small>(0)</small></span>
                                    </label>
                                </li>
                                <li>
                                    <label>
                                        <input type="checkbox" name="rat-filter" value="2" class="icheck" style="position: absolute; opacity: 0;">
                                        <span class="rating"><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star"></i><i class="icon_star"></i><i class="icon_star"></i> <small>(0)</small></span>
                                    </label>
                                </li>
                                <li>
                                    <label>
                                        <input type="checkbox" name="rat-filter" value="1" class="icheck" style="position: absolute; opacity: 0;">
                                        <span class="rating"><i class="icon_star voted"></i><i class="icon_star"></i><i class="icon_star"></i><i class="icon_star"></i><i class="icon_star"></i> <small>(0)</small></span>
                                    </label>
                                </li>
                            </ul>
                        </div>*@
                        </div>
                    </div>
                </div>
            </aside>
            <div class="col-lg-9" id="div-education-container">
                @if (Model.ShowAs == "grid")
                {
                    <div class="row" id="div-education-container-row">

                    </div>
                }
            </div>
        </div>
    </div>

    <partial name="partials/search/_SearchResultsPreFooter" />

</main>

@section postScripts{
    <script src="~/js/sup/cart.js"></script>
    <script>
        /* fields */
        var _categoryName = $("#_category-name");
        var _searchText = $("#_search-text");
        var _page = $("#_page");
        var _showAs = $("#_show-as");
        var _hasFilter = false;

        /* elements */
        var divEducationContainer = $("#div-education-container");
        var divEducationContainerRow = $("#div-education-container-row");
        var btnLoadMoreText = `<p class="text-center add_top_60" id="p-btn-container"><button id="btn-load-more" class="btn_1">Daha Fazla Yükle</button></p>`;
        var btnShowAsGrid = $("#btn-show-as-grid");
        var btnShowAsList = $("#btn-show-as-list");
        var btnSearch = $("#btn-search");
        var inputSearch = $("#input-search");
        var listingFilters = $("input[name='listing_filter']");
        var selectOrder = $("select[name='orderby']");   

        /* assignments */
        $(document).ready(document_onLoad);
        btnShowAsGrid.on("click", btnShowAsGrid_onClick);
        btnShowAsList.on("click", btnShowAsList_onClick);
        listingFilters.on("click", listingFilters_onClick);
        btnSearch.on("click", btnSearch_onClick);
        selectOrder.on("change", selectOrder_onChange);

        /* events */
        function document_onLoad() {
            clearUri();
            prepareFilterBox();
            getSearchResults(false);
            $('small[name=base-cat]').each(function () {
                if ($(this).text() == _categoryName.val())
                    $(this).addClass('selected-cat');
            });
        }
        function btnLoadMore_onClick() {
            if (_hasFilter)
                getFilteredResults(true);
            else
                getSearchResults(true);
        }
        function btnShowAsGrid_onClick() {
            var url = `/egitimler`;
            if (_categoryName.val() != null)
                url += `/${slugify(_categoryName.val())}`;
            url += `?`;
            if (_searchText.val());
                url += `s=${inputSearch.val()}&`;
            location.href = `${url}showAs=grid`;
        }
        function btnShowAsList_onClick() {
            var url = `/egitimler`;
            if (_categoryName.val() != null)
                url += `/${slugify(_categoryName.val())}`;
            url += `?`;
            if (_searchText.val());
                url += `s=${_searchText.val()}&`;
            location.href = `${url}showAs=list`;
        }
        function btnSearch_onClick() {
            var searchText = inputSearch.val();

            if (searchText == "" && !_hasFilter)
                inputSearch.addClass("is-invalid");
            else {
                if (_showAs.val() == "grid")
                    btnShowAsGrid_onClick();
                else
                    btnShowAsList_onClick();
            } 
        }
        function listingFilters_onClick() {
            var order = $(this).val();

            if (order == 0)
                location.href = 'egitimler';

            if (_hasFilter)
                getFilteredResults(false, order);
            else
                getSearchResults(false, null, order);
        }
        function buyBtns_onClick() {
            var educationId = $(this).data("id");

            var cart = new CartSupport.Cart();
            cart.addToCart(educationId);

            location.href = "/sepet";
        }
        function selectOrder_onChange() {
            var order = $(this).children("option:selected").val();
            getSearchResults(false, order);
        }

        /* functions */
        function clearUri() {
            var uri = window.location.toString();
            if (_searchText.val() == "" && _categoryName.val() == "") {
                var n = uri.lastIndexOf('/');
                var result = uri.substring(n + 1);
                console.log(_categoryName.val())
                if (result != "egitimler" && result.length > 0) {
                    var clean_uri = uri.substring(0, n);
                    window.history.replaceState({}, document.title, clean_uri);
                }
            }
            var m = uri.lastIndexOf('?');
            window.history.replaceState({}, document.title, uri.substring(0, m));
        }
        function getSearchResults(isLoadMore, filter, order) {
            var pBtnContainer = document.getElementById("p-btn-container");
            if (pBtnContainer)
                pBtnContainer.remove();

            if ((filter != null || order != null) && !isLoadMore)
                _page.val(0);

            var url = `/get-courses`;

            $.ajax({
                url: url,
                method: "post",
                data: {
                    categoryName: "",
                    searchText: _searchText.val(),
                    page: _page.val(),
                    order: order,
                    filter: filter
                },
                success: (res) => {
                    var data = res.data.model;
                    var showAs = _showAs.val();

                    if (res.data.model.length != 0) {
                        if (showAs === "grid") {
                            if (!isLoadMore)
                                divEducationContainerRow.html("");

                            var boxes = prepareCourseBoxesAsGrid(data);
                            divEducationContainerRow.append(boxes);
                        } else {
                            if (!isLoadMore)
                                divEducationContainer.html("");

                            var boxes = prepareCourseBoxesAsList(data);
                            divEducationContainer.append(boxes);
                        }

                        if (data.length > 3) {
                            divEducationContainer.append(btnLoadMoreText);
                            var btnLoadMore = $("#btn-load-more");
                            btnLoadMore.on("click", btnLoadMore_onClick);
                        }
                    } else {
                        if (!isLoadMore) {
                            divEducationContainer.html("");
                            divEducationContainer.append(`<div class="alert alert-info">Ne yazık ki gösterilecek sonuç yok</div>`);
                        }
                    }

                    $("a[name='btn-buy']").on("click", buyBtns_onClick);

                    _page.val(parseInt(_page.val()) + 1);
                }
            });
        }
        function getFilteredResults(isLoadMore, order) {
            var filterOptions = {
                categories: [],
                levels: [],
                ratings: []
            };

            _hasFilter = $("input[name*='-filter']:checked").length > 0;

            $.each($("input[name='cat-filter']:checked"), function () {
                filterOptions.categories.push($(this).val());
            });

            $.each($("input[name='lev-filter']:checked"), function () {
                filterOptions.levels.push($(this).val());
            });

            $.each($("input[name='rat-filter']:checked"), function () {
                filterOptions.ratings.push($(this).val());
            });

            if (!isLoadMore) {
                if (_showAs.val() === "grid")
                    divEducationContainerRow.html(`<div class="alert alert-info">Yükleniyor...</div>`);
                else
                    divEducationContainer.html(`<div class="alert alert-info">Yükleniyor...</div>`);
            }

            getSearchResults(isLoadMore, filterOptions, order)
        }
        function prepareCourseBoxesAsGrid(data) {
            var boxes = "";
            for (var i = 0; i < data.length; i++) {
                var item = data[i];
                boxes +=
                    `<div class="col-xl-6 col-lg-6 col-md-6">` +
                    `<div class="box_grid wow">` +
                    `<figure class="block-reveal">` +
                    `<div class="block-horizzontal"></div>` +
                    `<a href="#0" class="wish_bt"></a>` +
                    `<a href="/kurs-detayi/${item.base.id}"><img src="${item.medias[0].fileUrl}" class="img-fluid" alt=""></a>` +
                    `<div class="price">${item.base.priceText}</div>` +
                    `<div class="preview"><span><a href="/kurs-detayi/${item.base.id}">Detaylar</a></span></div>` +
                    `</figure>` +
                    `<div class="wrapper">` +
                    `<small>${item.base.categoryName}</small>` +
                    `<h3>${item.base.name}</h3>` +
                    `<a href="/kurs-detayi/${item.base.id}">` +
                    `<div class="desc-div">` +
                    `</div>` +
                    `</a>` +
                    `<p class="desc-p">${item.base.description}</p>` +
                    `</div>` +
                    //`<hr>` +
                    //`<ul>` +
                    //`<li><div class="rating"><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star"></i><i class="icon_star"></i> <small>(145)</small></div></li>` +
                    //`<li><i class="icon_like"></i> 890</li>` +
                    //`</ul>` +
                    `<ul>` +
                    `<li><i class="icon_clock_alt"></i> ${item.base.daysText} gün (${item.base.hoursPerDayNumeric * item.base.daysNumeric} saat)</li>` +
                    `<li><a name="btn-buy" data-id="${item.base.id}" href="javascript:void(0)">Kayıt Ol</a></li>` +
                    `</ul>` +
                    `</div>` +
                    `</div>`;
            }

            return boxes;
        }
        function prepareCourseBoxesAsList(data) {
            var boxes = "";
            for (var i = 0; i < data.length; i++) {
                var item = data[i];
                boxes += `<div class="box_list wow">` +
                    `<div class="row no-gutters">` +
                    `<div class="col-lg-5">` +
                    `<figure class="block-reveal">` +
                    `<div class="block-horizzontal"></div>` +

                    `<a href="/kurs-detayi/${item.base.id}"><img src="${item.medias[0].fileUrl}" class="img-fluid" alt=""></a>` +

                    `<div class="preview"><span><a href="/kurs-detayi/${item.base.id}">Detaylar</a></span></div>` +
                    `</figure>` +
                    `</div>` +
                    `<div class="col-lg-7">` +
                    `<div class="wrapper">` +
                    `<a href="#0" class="wish_bt"></a>` +

                    `<div class="price">${item.base.priceText}</div>` +

                    `<small>${item.base.categoryName}</small>` +
                    `<h3>${item.base.name}</h3>` +
                    `<p>${item.base.description}</p>` +
                    //`<div class="rating"><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star voted"></i><i class="icon_star"></i><i class="icon_star"></i> <small>(145)</small></div>` +
                    //`</div>` +

                    `<ul>` +
                    `<li><i class="icon_clock_alt"></i> ${item.base.daysText} gün (${item.base.hoursPerDayNumeric * item.base.daysNumeric} saat)</li>` +
                    //`<li><i class="icon_like"></i> 890</li>` +
                    `<li><a name="btn-buy" data-id="${item.base.id}" href="javascript:void(0)">Kayıt Ol</a></li>` +
                    `</ul>` +
                    `</div>` +
                    `</div>` +
                    `</div>`;
            }

            return boxes;
        }
        function prepareFilterBox() {
            var categoryList = $("#category-list");
            var levelList = $("#level-list");

            $.ajax({
                url: `/get-filter-options/`,
                method: "post",
                data: {
                    searchText: _searchText.val()
                },
                success: (res) => {
                    categoryList.empty();

                    var data = res.data;

                    for (var i = 0; i < data.categories.length; i++) {
                        var item = data.categories[i];

                        if (item.baseCategoryName == "") {
                            var chosen = _categoryName.val() != "" && _categoryName.val() == item.categoryName ? "chosen" : "";

                            categoryList.append(`
                                <li>
                                    <label>
                                        <input type="checkbox" name="base-cat-filter" value="${item.categoryName}" class="icheck ${chosen}" style="position: absolute; opacity: 0;">
                                        <small>${item.categoryName} (${item.count})</small>
                                    </label>
                                    <ul class="sub-cat" data-cat-name="${item.categoryName}"></ul>
                                </li>
                            `);
                        }
                        else {
                            var ul = $("ul").find(`[data-cat-name="${item.baseCategoryName}"]`);
                            ul.append(`
                                <li>
                                    <label>
                                        <input type="checkbox" name="cat-filter" value="${item.categoryName}" class="icheck" style="position: absolute; opacity: 0;">
                                        <small>${item.categoryName} (${item.count})</small>
                                    </label>
                                </li>
                            `);
                        }
                    }

                    Object.keys(data.levels).forEach(key => {
                        var level;

                        switch (key) {
                            case "Beginner":
                                level = "Başlangıç";
                                break;
                            case "Intermediate":
                                level = "Orta";
                                break;
                            case "Advanced":
                                level = "İleri";
                                break;
                        }

                        levelList.append(`
                                <li>
                                    <label>
                                        <input type="checkbox" name="lev-filter" value="${key}" class="icheck" style="position: absolute; opacity: 0;">
                                        <small>${level} (${data.levels[key]})</small>
                                    </label>
                                </li>
                            `);
                    })

                    $('.icheck').iCheck({
                        checkboxClass: 'icheckbox_square-grey',
                        radioClass: 'iradio_square-grey'
                    });

                    $('.icheck').on('ifToggled', function () {
                        if ($(this).attr('name') == 'base-cat-filter') {
                            var ul = $("ul").find(`[data-cat-name="${$(this).val()}"]`);
                            var state = $(this).parent('[class*="icheckbox"]').hasClass('checked') ? 'uncheck' : 'check';
                            ul.find('input[name="cat-filter"]').iCheck(state);
                        }
                        else
                            getFilteredResults(false);
                    });

                    $('.chosen').iCheck('check');
                }
            });
        }
        function slugify(text) {
            var trMap = {
                'çÇ': 'c',
                'ğĞ': 'g',
                'şŞ': 's',
                'üÜ': 'u',
                'ıİ': 'i',
                'öÖ': 'o'
            };
            for (var key in trMap) {
                text = text.replace(new RegExp('[' + key + ']', 'g'), trMap[key]);
            }
            return text.replace(/[^-a-zA-Z0-9\s]+/ig, '') // remove non-alphanumeric chars
                .replace(/\s/gi, "-") // convert spaces to dashes
                .replace(/[-]+/gi, "-") // trim repeated dashes
                .toLowerCase();
        }
    </script>
}